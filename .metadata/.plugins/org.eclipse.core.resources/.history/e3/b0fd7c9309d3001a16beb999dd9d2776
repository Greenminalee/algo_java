package algo;

import java.util.LinkedList;

/*
 * https://www.acmicpc.net/problem/2908
 */
public class Algo10 {

	public static void main(String[] args) {

		System.out.println(solution(123, 456));
	}

	static int solution(int a, int b) {
		String snum = "";
		String tmp = "";

		snum = Integer.toString(a);
		for (int i = snum.length() - 1; i >= 0; i--)
			tmp += snum.charAt(i);
		a = Integer.parseInt(tmp);

		tmp = "";
		snum = Integer.toString(b);
		for (int i = snum.length() - 1; i >= 0; i--)
			tmp += snum.charAt(i);
		b = Integer.parseInt(tmp);

		a = a > b ? a : b;
		return (a);
	}
	
	
	static void deque(LinkedList<Integer> list, String str, int x)
	{
		int  answer = 0;
		if(str.equals("push_front"))
		{
			list.add(0,x);
			return ;
		}
		
		if(str.equals("push_back"))
		{
			list.add(list.size(), x);
			return ;
		}
		
		if(str.equals("pop_front"))
		{
			if (list.size() != 0)
			{
				answer = (list.get(0));
				list.remove(0);
			}
			else
				answer = -1;
		}
		
		if(str.equals("pop_back"))
		{
			if (list.size() != 0)
			{
				answer = (list.get(list.size() - 1));
				list.remove(list.size() -1);
			}
			else
				answer = -1;		
		}
		
		if(str.equals("size"))
		{
			answer = list.size();
		}
		
		if(str.equals("empty"))
		{
			if(list.size() == 0)
				answer = 1;
			else
				answer = 0; 
		}
		
		if(str.equals("front"))
		{
			if (list.size() != 0)
			{
				answer = (list.get(0));
			}
			else
				answer = -1;	
		}
		
		if(str.equals("back"))
		{
			if (list.size() != 0)
			{
				answer = (list.get(list.size() - 1));
			}
			else
				answer = -1;
		}
		System.out.println(answer);
	}
	
}
